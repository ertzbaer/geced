═══════════════════════════════════════════════════════════════
  GEEX PHP TEMPLATE - VERWENDUNG & DOKUMENTATION
═══════════════════════════════════════════════════════════════

✅ DAS TEMPLATE IST JETZT EINSATZBEREIT!

🌐 ZUGRIFF:
   - Preview-URL: Ihre Emergent Preview-URL
   - Lokal: http://localhost:3000/

📂 PROJEKTSTRUKTUR:
   /app/
   ├── index.php              # Hauptdatei (statisch)
   ├── ajax-handler.php       # AJAX-Router
   ├── config/                # Konfiguration
   ├── includes/              # Header, Sidebar, Footer
   ├── pages/                 # Dynamische Seiten
   └── assets/                # CSS, JS, Bilder

🎯 WIE ES FUNKTIONIERT:

1. BEIM ERSTEN BESUCH:
   - index.php lädt einmal: Header, Sidebar, Footer
   - JavaScript (page-loader.js) initialisiert sich
   - Erste Seite wird per AJAX geladen

2. BEI JEDEM KLICK:
   - Nur der <main>-Inhalt wird neu geladen
   - Kein vollständiger Page-Reload!
   - Schneller & bessere UX

📝 NEUE SEITE ERSTELLEN:

SCHRITT 1: Seite erstellen
   Datei: /app/pages/meine-seite.php
   
   <?php
   ?>
   
   <div class="geex-content__header">
       <div class="geex-content__header__content">
           <h2 class="geex-content__header__title">Meine Seite</h2>
           <p class="geex-content__header__subtitle">Beschreibung</p>
       </div>
   </div>
   
   <div class="geex-content__wrapper">
       <!-- Ihr Content -->
   </div>

SCHRITT 2: Seite registrieren
   Datei: /app/ajax-handler.php
   
   $allowedPages = [
       'dashboard',
       'blog',
       'meine-seite',  // <-- NEU
   ];

SCHRITT 3: Link hinzufügen
   Datei: /app/includes/sidebar.php ODER header.php
   
   <li class="geex-sidebar__menu__item">
       <a href="#" data-page="meine-seite" class="page-link">
           Meine Seite
       </a>
   </li>

🔗 WICHTIG FÜR LINKS:
   ✅ RICHTIG:
   <a href="#" data-page="blog" class="page-link">Blog</a>
   
   ❌ FALSCH:
   <a href="blog.html">Blog</a>  (lädt ganze Seite neu)

🗄️ DATENBANK VERWENDEN:

OPTIONAL: MySQL konfigurieren
   Datei: /app/config/database.php
   
   define('DB_HOST', 'localhost');
   define('DB_USER', 'ihr_user');
   define('DB_PASS', 'ihr_passwort');
   define('DB_NAME', 'geex_dashboard');

SQL-Schema importieren:
   mysql -u root -p < /app/config/database.sql

In Seiten verwenden:
   <?php
   try {
       $db = Database::getInstance();
       $users = $db->query("SELECT * FROM users")->fetchAll();
   } catch (Exception $e) {
       // Fallback zu Demo-Daten
       $users = [];
   }
   ?>

📊 VERFÜGBARE BEISPIEL-SEITEN:
   • Dashboard      (?page=dashboard)
   • Blog           (?page=blog)
   • Todo-Liste     (?page=todo)
   • Chat           (?page=chat)
   • Server         (?page=server)
   • Banking        (?page=banking)

⚡ PERFORMANCE:
   Traditionell: 150KB pro Seite
   Mit Template: 150KB initial + 5KB pro weiterer Seite
   
   Ergebnis: Bis zu 65% weniger Datenübertragung!

🔒 SICHERHEIT:
   ✅ Whitelist für erlaubte Seiten
   ✅ Prepared Statements für DB
   ✅ HTML-Escaping in Beispielen
   ✅ Session-Management

📚 DOKUMENTATION:
   - README.md           # Vollständige Anleitung
   - INSTALLATION_DE.md  # Schnellstart
   - STRUCTURE.md        # Technische Details

🛠️ SERVER-STATUS:
   Prüfen: sudo supervisorctl status php-server
   Neustarten: sudo supervisorctl restart php-server
   Logs: tail -f /var/log/supervisor/php-server.err.log

💡 TIPPS:
   1. Template funktioniert OHNE Datenbank (mit Demo-Daten)
   2. Nur <main>-Bereich wird dynamisch geladen
   3. Browser Vor/Zurück funktioniert
   4. Einfach eigene Seiten hinzufügen

═══════════════════════════════════════════════════════════════
